// Importing necessary libraries and components
import React, { useContext, useEffect } from 'react'; // React and hooks for managing state and side effects
import { UserContext } from '@/UserContext'; // Context for user state and actions
import Head from 'next/head'; // Head component for setting metadata in the HTML document head
import Image from "next/image"; // Image component for optimized image loading
import Link from 'next/link'; // Link component for client-side navigation
import { useRouter } from 'next/router'; // useRouter hook for navigation

// Define the ProductionHome functional component
function ProductionHome() {
  // Use UserContext to access user state and handleLogout function
  const { user, handleLogout } = useContext(UserContext);
  // Initialize Next.js router
  const router = useRouter();

  // Function to log user interactions to New Relic
  const logUserInteractionToNewRelic = (interactionType) => {
    // Define headers for the fetch request
    var myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");
    myHeaders.append("Api-Key", process.env.NEXT_PUBLIC_NEWRELIC_API_KEY); // API key from environment variables

    // Define the log payload
    var logPayload = {
      timestamp: new Date().toISOString(), // Current timestamp
      message: `User '${user.UserID}' clicked on '${interactionType}' screen`, // Log message with user ID and interaction type
      logtype: "user-interaction", // Type of log
      service: "login-service", // Service name
      hostname: "login.example.com", // Hostname
    };

    // Define request options for the fetch call
    var requestOptions = {
      method: 'POST', // HTTP method
      headers: myHeaders, // Headers defined above
      body: JSON.stringify(logPayload), // Body containing the log payload
      redirect: 'follow', // Follow redirects
    };

    // Send the log data to New Relic
    fetch(process.env.NEXT_PUBLIC_NEWRELIC_LOG_ENDPOINT, requestOptions)
      .then(response => response.text()) // Parse the response as text
      .then(result => console.log(result)) // Log the result to the console
      .catch(error => console.error('Error logging to New Relic:', error)); // Log any errors to the console
  };

  return (
    <>
      {/* Head component for setting metadata in the HTML document head */}
      <Head>
        <title>MSSPL Production Home</title> {/* Page title */}
        <meta name="description" content="Generated by create next app" /> {/* Meta description */}
        <meta name="viewport" content="width=device-width, initial-scale=1" /> {/* Viewport settings for responsive design */}
        <link rel="icon" href="/favicon.ico" /> {/* Favicon link */}
      </Head>

      {/* Main content container */}
      <div className="content h-100">
        {/* Header Section */}
        <section>
          <div className="row">
            <div className="col">
              {/* Link to the production home page */}
              <Link href="/production-home">
                {/* Company logo */}
                <Image
                  className="header-logo"
                  src="/msspl-logo.png"
                  alt="logo"
                  width={115}
                  height={115}
                />
              </Link>
            </div>
            <div className="col centre pt-5">
              <p className="title">Home</p> {/* Page title */}
            </div>
            <div className="col pt-5 user-details">
              {/* Display user details if the user is logged in */}
              {user && (
                <>
                  <p className="username">User Name: {user.UserID}</p> {/* Display user ID */}
                  {user.Branch && user.Branch.length > 0 && (
                    <p className="branch">Branch: {user.Branch[0].BranchName}</p> 
                  )}
                  <button onClick={handleLogout}>Logout</button> {/* Logout button */}
                </>
              )}
            </div>
          </div>
          <hr /> {/* Horizontal line */}

          {/* Button Content Section */}
          <div className="d-flex justify-content-center">
            {/* Link to the start/resume production page */}
            <Link href="/start-resume-production">
              <button
                className="mt-5 mb-4 btn btn-home"
                type="submit"
                onClick={() => logUserInteractionToNewRelic("start-resume-production")} // Log interaction on button click
              >
                Start / Resume Production
              </button>
            </Link>
          </div>
          <div className="d-flex justify-content-center">
            {/* Link to the record breakdown page */}
            <Link href="/record-breakdown">
              <button
                className="mt-4 mb-4 btn btn-home"
                type="submit"
                onClick={() => logUserInteractionToNewRelic("record-breakdown")} // Log interaction on button click
              >
                Record Breakdown
              </button>
            </Link>
          </div>
          <div className="d-flex justify-content-center">
            {/* Link to the end production page */}
            <Link href="/end-production">
              <button
                className="mt-4 mb-4 btn btn-home"
                type="submit"
                onClick={() => logUserInteractionToNewRelic("end-production")} // Log interaction on button click
              >
                End Production
              </button>
            </Link>
          </div>
          <div className="d-flex justify-content-center">
            {/* Link to the search stock page */}
            <Link href="/search-stock">
              <button
                className="mt-4 mb-5 btn btn-home"
                type="submit"
                onClick={() => logUserInteractionToNewRelic("search-stock")} // Log interaction on button click
              >
                Search Stock
              </button>
            </Link>
          </div>
        </section>
      </div>
    </>
  );
}

// Export the ProductionHome component as the default export
export default ProductionHome;
